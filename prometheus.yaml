apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    app: prometheus

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: default
    namespace: monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-cm
  namespace: monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      # Attach these extra labels to all timeseries collected by this Prometheus instance.
      external_labels:
        monitor: 'app-monitor'
    scrape_configs:
      - job_name: 'prometheus'
        # Let prometheus monitor itself
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'app'
        # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - default
        # Keep the labels for the metrics adapter
        relabel_configs:
        - action: 'labelmap'
          regex: '__meta_kubernetes_pod_label_(.+)'
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          ports:
            - containerPort: 9090
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-cm
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - name: promui
      protocol: TCP
      port: 9090
      targetPort: 9090
